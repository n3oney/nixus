(defwidget bar []
  (centerbox :orientation "h"
    :class "ewwbar ${bar-class}"
    (box
      :class "left"
      :halign "start"
      (left))
    (box
      :class "center"
      :halign "start"
      (middle))
    (box
      :class "right"
      :halign "end"
      (right))
  )
)

(defwidget left []
  (box :orientation "h"
    :space-evenly false
    :spacing 12
  
    (power)
    (listeners)
  )
)

(defwidget middle []
  (time)
)

(defwidget time []
  (box :orientation "v"
       :class "time ${microphone-listeners != "0" ? "mic-used" : ""}"
       :space-evenly false
       :spacing 0
    hour date))

(defwidget listeners []
  (box :orientation "h" :space-evenly false :spacing 10 :valign "center"
    (revealer
      :transition "slideright"
      :reveal {microphone-listeners != "0"}

      (label
        :class "microphone-listeners"
        :tooltip "Some application is using the microphone."
        :width 10
        :height 10
        :text ""
      )
    )
    (revealer
      :transition "slideright"
      :reveal {screenshares != "0"}

      (label
        :class "screenshares"
        :tooltip "Some application is recording the screen."
        :width 10
        :height 10
        :text ""
      )
    )
  )
)

(deflisten bar-class :initial "nogaps" "./bar.sh")

(deflisten microphone-listeners :initial "0" "./mic.sh")
(deflisten screenshares :initial "0" "./screenshare.sh")

(defpoll hour :interval "1s" "date +%H:%M")
(defpoll date :interval "1s" "date +\"%B %d\"")

(defwidget power []
  (eventbox
    :onhover "eww update show_power=true"
    :onhoverlost "eww update show_power=false"

    (box
      :orientation "h"
      :space-evenly false
      :spacing 8
      :class "power"
      (poweroff)
      (revealer
        :transition "slideright"
        :reveal show_power
        :duration "550ms"
        (box
          :orientation "h"
          :space-evenly false
          :spacing 8
          (reboot)
          )
        )
      )
    )
  )

(defvar show_power false)

(defwidget poweroff []
  (button :class "poweroff" :onclick "poweroff" "")
)

(defwidget windows []
  (button :class "windows" :onclick "sudo efibootmgr --bootnext 0000 && reboot" "")
)

(defwidget reboot []
  (button :class "reboot" :onclick "reboot" "")
)

(defwidget right []
  (box
    :orientation "h"
    :space-evenly false
    :spacing 12

    (box
      :orientation "h"
      :space-evenly false
      :spacing 4
      :hexpand true
      :halign "start"

      (revealer
        :transition "slideup"
        :duration "300ms"
        :reveal {EWW_BATTERY != "" && EWW_BATTERY["BAT0"].capacity >= 0}
  
        (box
          :orientation "h"
          :space-evenly false
          :spacing 5
          (label :class "battery ${EWW_BATTERY != "" ? EWW_BATTERY["BAT0"].status : ""}" :text "${EWW_BATTERY != "" ? EWW_BATTERY["BAT0"].capacity : ""}")
        )
      )

      (revealer
        :transition "slideup"
        :duration "300ms"
        :reveal {iphone_battery.percentage != ""}

        (label :class "iphone ${iphone_battery.connected ? "connected" : "disconnected"}" :text "${iphone_battery["percentage"]}")
      )
      (label :class volume-class :text volume)
      (label :class volume-speakers-class :text volume-speakers)
    )
  )
)

(deflisten volume-class :initial "volume" "./audio.sh muted")
(deflisten volume :initial "0" "./audio.sh volume")

(deflisten volume-speakers-class :initial "volume" "./audio.sh speaker-muted")
(deflisten volume-speakers :initial "0" "./audio.sh volume-speakers")

(deflisten iphone_battery :initial "{\"percentage\": \"\", \"connected\": false}" "./iphone.sh")

(defwindow bar
  :stacking "fg"
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :wm-ignore false
  :geometry (geometry :width "100%" :height "28px")
  :anchor "top left"
  (bar)
)
